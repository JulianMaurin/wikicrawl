from __future__ import annotations

from environs import Env

env = Env()

WORKER_BROKER_URL: str = env("WORKER_BROKER_URL")
WORKER_RESULT_BACKEND: str = env("WORKER_RESULT_BACKEND")

WORKER_TASK_CACHE_URL: str = env("WORKER_TASK_CACHE_URL")
WORKER_TASK_CACHE_TIMEOUT: int = env.int("WORKER_TASK_CACHE_TIMEOUT", 60 * 15)  # 15min

WORKER_STATSD_HOST: str | None = env("WORKER_STATSD_HOST", None)
WORKER_STATSD_PORT: int | None = env.int("WORKER_STATSD_PORT", None)
WORKER_STATSD_TIMEOUT: int = env.int("WORKER_STATSD_TIMEOUT", 2)

WORKER_QUEUE_RECORD_NAME: str = env("WORKER_QUEUE_RECORD_NAME", "recording-queue")
WORKER_QUEUE_RECORD_TASK: str = env("WORKER_QUEUE_RECORD_TASK", "wikicrawl.workers.record")
WORKER_QUEUE_RECORD_RATE_LIMIT: str | None = env("WORKER_QUEUE_RECORD_RATE_LIMIT", None)
WORKER_QUEUE_RECORD_BATCH_SIZE: str = env.int("WORKER_QUEUE_RECORD_BATCH_SIZE", 5)
WORKER_QUEUE_RECORD_BATCH_TIMEOUT: str = env.int("WORKER_QUEUE_RECORD_BATCH_TIMEOUT", 5)
WORKER_QUEUE_RECORD_MAX_LENGTH: int = env.int("WORKER_QUEUE_RECORD_MAX_LENGTH", 500000)


WORKER_QUEUE_CRAWL_NAME: str = env("WORKER_QUEUE_CRAWL_NAME", "crawling-queue")
WORKER_QUEUE_CRAWL_TASK: str = env("WORKER_QUEUE_CRAWL_TASK", "wikicrawl.workers.crawl")
WORKER_QUEUE_CRAWL_RATE_LIMIT: str | None = env("WORKER_QUEUE_CRAWL_RATE_LIMIT", None)
WORKER_QUEUE_CRAWL_MAX_LENGTH: int = env.int("WORKER_QUEUE_CRAWL_MAX_LENGTH", 500000)
